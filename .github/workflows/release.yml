name: Release
on:
  push:
    branches: [master, main]
    tags: ["*"]
jobs:
  publish:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3.0.2
        with:
          fetch-depth: 0
      - uses: olafurpg/setup-scala@v13
      - name: Release 2.4.8 -> 3.3
        run: |
          cd scalafix
          sbt ci-release
        env:
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
      - name: Release 2.3.2 -> 3.3
        run: |
          cd scalafix
          sbt ci-release -DsparkVersion=2.3.2
        env:
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
      - name: Release 2.1.1 -> 3.3
        run: |
          cd scalafix
          sbt ci-release -DsparkVersion=2.1.1
        env:
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
  pypi-publish-pysparkler:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PySparkler
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Publish PySparkler Package on PyPI
        run: |
          cd pysparkler
          make publish
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYSPARKLER_PYPI_API_TOKEN }}
